name: Deploy Backend
on:
  workflow_dispatch:
    inputs:
      app_name:
        description: Name of the application
        required: true
        type: string
        default: fia7
      environment:
        description: Deployment
        required: true
        type: choice
        default: dev
        options:
          - dev
          - stg
          - prd
permissions:
  id-token: write
  contents: read
jobs:
  prepare:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    outputs:
      version: ${{ steps.gitversion.outputs.major }}.${{ steps.gitversion.outputs.minor }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github
          aws-region: us-west-2
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.11.0
        with:
          versionSpec: '5.x'
      - name: Run GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.11.0
      - name: Show GitVersion
        run: |
          echo "VERSION=${{ steps.gitversion.outputs.major }}.${{ steps.gitversion.outputs.minor }}" | tee version.txt
      - name: Upload Version artifact
        uses: actions/upload-artifact@v4
        with:
          name: version
          path: ./version.txt
  build:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    needs: prepare
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: |
          docker build -f ./source/backend/PlayerDockerfile ./source/backend
          docker build -f ./source/backend/TeamDockerfile ./source/backend
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    needs: [prepare, build]
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github
          aws-region: us-west-2
      - name: Login Amazon ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Player Build and push
        continue-on-error: true
        env:
          ECR_REGISTRY: ${{ steps.ecr.outputs.registry }}
          ECR_REPOSITORY: "${{ inputs.environment }}-fia7-player"
          IMAGE_TAG: ${{ needs.prepare.outputs.version }}
        run: |
          docker build -f ./source/backend/PlayerDockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./source/backend
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      - name: Team Build and push
        continue-on-error: true
        env:
          ECR_REGISTRY: ${{ steps.ecr.outputs.registry }}
          ECR_REPOSITORY: "${{ inputs.environment }}-fia7-team"
          IMAGE_TAG: ${{ needs.prepare.outputs.version }}
        run: |
          docker build -f ./source/backend/TeamDockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./source/backend
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.10.5
      - name: Install Terragrunt
        uses: autero1/action-terragrunt@v3
        with:
          terragrunt-version: 0.80.4
      - name: Run Terraform
        run: ./.github/scripts/deploy_backend.sh
        env:
          APP_NAME: fia7
          APP_VERSION: ${{ needs.prepare.outputs.version }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          ENVIRONMENT: ${{ inputs.environment }}
          TF_BUCKET: ${{ inputs.environment }}-fia7-tf
